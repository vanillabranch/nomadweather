01. The Rules of React Native.

-Rule No.1-
RN은 HTML이 아님, R처럼 <div>를 기재할수 없고, <View>를 사용한다.
그래서 반드시 view를 import해야한다.
------------------------------------------------------------------------------------------------------------------------

-Rule No.2-
모든 텍스트는 Text컴포넌트에 들어가야한다.  span, p 태그 이런거 안된다. 브라우저가 아님.
만약 Text를 View에 넣었다면.. <View>Hello world</View> 이렇게 쓰면 반드시 오류가 발생한다.
------------------------------------------------------------------------------------------------------------------------

-Rule No.3-
<View> 에는 style이 존재함.
style을 적용할수 있는데, 우리가 알고있는 일부 css와는 다르다.
예를들어 브라우저에서 작동하는 border 스타일을 적용하면, 오류가 발생한다.

StyleSheet.create에 대해 알아보자.
{} <- object를 의미하는 브레이스
container : {

}

▲이건 container 오브젝트라는 뜻.
StyleSheet.create를 해서 오브젝트별로 만들어서 styles.~~하면 편하기도 하고,
오브젝트 안에서 키워드로 많은 자동완성들을 지원한다.
하지만 이렇게 만들어서 쓰는게, 필수사항은 아님을 기억하자.

<View style={{
 fontSize : 28 <- 이런식으로 여전히 컴포넌트안에다가 넣어줄수도 있다.
}}
그래서 결론적으로 스타일시트 오브젝트가 필수적인 사항은 아니란것이다.
하지만, 스타일내용이 많아질수록 컴포넌트에 정의하는 내용이 점점더 길어질것이다.
그래서 보통 따로 만들어서 지정하는것!

반면에 이렇게 할수도 있다.
const styles = {
    container : {
        flex : 1,
        backgroundColor : "fff"
    }
}
이상없이 잘 작동한다. 하지만 스타일시트 크리에이트와는 다르게 자동완성이 안된다는 것이다.
styleSheetCreate는 오브젝트에 불과하다.
그리고 container와 같이 명칭은 아무거나 쓸수없을거다. class와 같은건데, 그렇다고 특별한 네이밍 규칙을 따르거나 하진 않는다.
그러니, 자유롭게 사용하자. 이왕이면 분리해서 할 것!
------------------------------------------------------------------------------------------------------------------------

RN은 브라우저가 아니기때문에, CSS등을 잘못입력했을경우 바로 오류를 반환한다.
반면 브라우저는 오류없이 그냥 반영이 안된다는것....이게 바로 브라우저가 아닌란 뜻.

StatusBar컴포넌트는 상단에 시계와 배터리다.
정의해도 해당위치에 보이지않는다, 바로 운영체제와 소통하기 위한것으로 존재하는 컴포넌트이기 때문.
